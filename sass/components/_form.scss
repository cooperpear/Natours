.form {

    &__input {
        font-size: 1.5rem;
        font-family: inherit;
        padding: 1.5rem 2rem;
        border-radius: 2px;
        background-color: rgba($color-white, .5);
        border: none;
        border-bottom: 3px solid transparent;
        width: 90%;
        display: block;
        color: inherit;
        transition: all .3s;

        //this is important for accessibility. people without mouses need to know which element they are selecting. ADA
        &:focus {
            outline: none;
            box-shadow: 0 1rem 2rem rgba($color-black, .1);
            border-bottom: 3px solid $color-primary;
        }


        &:focus:invalid {
            border-bottom: 3px solid $color-secondary-dark;
        }

        //pseudo element. only works on safari and chrome 
        &::-webkit-input-placeholder {
            color: $color-grey-dark-2;
        }

}



//style everything but the last child
    &__group:not(:last-child) {
        margin-bottom: 2rem;
    }

    

    &__label {
        font-size: 1.2rem;
        font-weight: 700;
        margin-left: 2rem;
        margin-top: .7rem;
        display: block;
        transition: all .3s;
    }

    //adjacent sibling seletor "+" used here
    &__input:placeholder-shown + &__label {
        opacity: 0;
        visibility: hidden;
        transform: translateY(-4rem);
    }

    &__radio-group {
        width: 49%;
        display: inline-block;
    }

    //hides the radio button element after our custom style has been applied
    &__radio-input {
        display: none;
    }

    &__radio-label {
        font-size: $default-font-size;
        cursor: pointer;
        position: relative;
        padding-left: 4.5rem;
    }

    &__radio-button {
        height: 3rem;
        width: 3rem;
        border: 5px solid $color-primary;
        border-radius: 50%;
        display: inline-block;
        position: absolute;
        left: 0;
        top: -.4rem;

        &::after {
            //always set the content property of a pseudoelement to "empty"
            content: "";
            display: block;
            height: 1.3rem;
            width: 1.3rem;
            border-radius: 50%;
            position: absolute;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            background-color: $color-primary;
            opacity: 0;
            transition: opacity .2s;

        }
    }

    //this is how we style custom radio buttons, and also custom check boxes
    //as soon as we hit the label element, the radio element becomes checked. so we simply select the sibling element of the label element, then the child, because this is the one we want to change. 
    &__radio-input:checked ~ &__radio-label &__radio-button::after {
        opacity: 1;
    }

}